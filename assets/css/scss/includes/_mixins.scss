
/* ==========================================================================
   Mixins
========================================================================== */

@mixin border-radius($radius: 2px) {
   -webkit-border-radius: $radius;
   -moz-border-radius: $radius;
   -ms-border-radius: $radius;
   -o-border-radius: $radius;
   border-radius: $radius;
}

@mixin transform($transform) {
   -webkit-transform: $transform;
   -moz-transform: $transform;
   -ms-transform: $transform;
   -o-transform: $transform;
   transform: $transform;
}

@mixin transition($transitions...) {
   $unfoldedTransitions: ();
   @each $transition in $transitions {
      $unfoldedTransitions: append($unfoldedTransitions, unfoldTransition($transition), comma);
   }

   -webkit-transition: $unfoldedTransitions;
   -moz-transition: $unfoldedTransitions;
   -ms-transition: $unfoldedTransitions;
   -o-transition: $unfoldedTransitions;
   transition: $unfoldedTransitions;
}

@function unfoldTransition ($transition) {
   // Default values
   $property: all;
   $duration: .2s;
   $easing: null; // Browser default is ease, which is what we want
   $delay: null; // Browser default is 0, which is what we want
   $defaultProperties: ($property, $duration, $easing, $delay);

   // Grab transition properties if they exist
   $unfoldedTransition: ();
   @for $i from 1 through length($defaultProperties) {
      $p: null;
      @if $i <= length($transition) {
         $p: nth($transition, $i)
      } @else {
         $p: nth($defaultProperties, $i)
      }
      $unfoldedTransition: append($unfoldedTransition, $p);
   }

   @return $unfoldedTransition;
}

@mixin keyframes($animation-name) {
   @-webkit-keyframes #{$animation-name} {
      @content;
   }

   @-moz-keyframes #{$animation-name} {
      @content;
   }

   @-ms-keyframes #{$animation-name} {
      @content;
   }

   @-o-keyframes #{$animation-name} {
      @content;
   }

   @keyframes #{$animation-name} {
      @content;
   }
}

@mixin animation ($delay, $duration, $animation) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-name: $animation;
    -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

@mixin box-shadow($box-shadow) {
   -webkit-box-shadow: $box-shadow;
   -moz-box-shadow: $box-shadow;
   -ms-box-shadow: $box-shadow;
   -o-box-shadow: $box-shadow;
   box-shadow: $box-shadow;
}

@mixin text-shadow($text-shadow) {
   -webkit-text-shadow: $text-shadow;
   -moz-text-shadow: $text-shadow;
   -ms-text-shadow: $text-shadow;
   -o-text-shadow: $text-shadow;
   text-shadow: $text-shadow;
}

@mixin logo($background-position) {
   background: url("#{$logo}") $background-position no-repeat;
}

@mixin opacity($opacity) {
   opacity: $opacity;
   $opacity-ie: $opacity * 100;
   filter: alpha(opacity=$opacity-ie);
}
